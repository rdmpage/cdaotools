
/*
 * CDAOMatrixChooser.java
 *
 * Created on Apr 12, 2010, 6:09:26 PM
 */

package matrixviewer;

import cdaoexplorer.guimodels.TreeNameListModel;
import cdaoexplorer.forms.dialogs.CDAODataSetChooser;
import cdaoexplorer.forms.dialogs.ErrorReportDialog;
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author bchisham
 */
public class CDAOMatrixChooser extends CDAODataSetChooser {
    private TreeNameListModel model;
    private cdaoexplorer.forms.dialogs.FileDialog fileChooser;
    private AboutBox aboutBox;
    private ErrorReportDialog errorDialog;
    /** Creates new form CDAOMatrixChooser */
    public CDAOMatrixChooser() {
        super();
        model = new TreeNameListModel();
        this.setModel(model);
        this.model.setListingType( TreeNameListModel.ListingType.MATRIX );
        model.updateModel();
        //aboutBox = new AboutBox();
        this.fileChooser = new cdaoexplorer.forms.dialogs.FileDialog(this, true );
        this.errorDialog = new ErrorReportDialog( this, false );
        initComponents();
        this.setTitle( "CDAO Matrix Chooser" );
        this.setKeyLabel("Matrix:");
        
    }
    
    @Override
    public void view(){
       
            String[] params = new String[2];
            String matrixURI = "http://www.cs.nmsu.edu/~bchisham/cgi-bin/phylows/matrix/" + this.getSelectedItem() + "?format=csv";
            System.err.println("Displaying URI: " + matrixURI);
            params[0] = matrixURI;
            params[1] = matrixURI;

            //MatrixViewer.main(params);
            MatrixViewer mv = new MatrixViewer(  );
            mv.setDefaultCloseOperation( JFrame.HIDE_ON_CLOSE );
            mv.openFile( matrixURI );
            mv.setVisible( true );
       

    }
    

    @Override
    public void doOpenFile() {
        this.fileChooser.setVisible( true );
        File matrixFile  = this.fileChooser.getSelectedFile();
        if (matrixFile != null){
            try {
                this.doOpenFile(matrixFile.toURL());
            } catch (MalformedURLException ex) {
                Logger.getLogger(CDAOMatrixChooser.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    @Override
    public void doOpenFile(URL file) {
        if (file != null){
            MatrixViewer mv = new MatrixViewer(  );
            mv.setDefaultCloseOperation( JFrame.DISPOSE_ON_CLOSE );
            mv.openFile( file );
            mv.setVisible( true );
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tree Chooser");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 508, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 522, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CDAOMatrixChooser().setVisible(true);
            }
        });
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables



}
