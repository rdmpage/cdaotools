#!/bin/zsh
#Mar 30, 2010
#Brandon Chisham
#Script to implement the trees of maximum size query.

source "phylows.env"


#set_mime_type "text/xml"
echo -n -e "Content-type: text/xml\n\n"
#echo ""
#echo ""

#TREE_NAME=$(set_tree_name "size")
#FILE_NAME=$(grep "$TREE_NAME" tree_to_file.dat | cut -d' ' --fields=1 )
XMLNS="http://www.cs.nmsu.edu/~epontell/$FILE_NAME#"
EXMLNS="http:\/\/www.cs.nmsu.edu\/~epontell\/$FILE_NAME#"
PHYLOWSTREE="http://www.cs.nmsu.edu/~bchisham/cgi-bin/phylows/tree"

SIZE_CRITERIA=$(echo $REQUEST_URI | grep -oE "(node|leaf|internal|radius|diameter)")
QUERY_RELATION=$(echo $REQUEST_URI | grep -oE "(greater|less|equal|range)")
SIZE_SPECIFIED=$(echo $REQUEST_URI | grep -oE "[1-9][0-9]*$" )
RANGE=$(echo $REQUEST_URI | grep -oE "[1-9][0-9]*:[1-9][0-9]*$")
LOWER_BOUND=$(echo $RANGE | cut -d: --fields=1)
UPPER_BOUND=$(echo $RANGE | cut -d: --fields=2)

if [[ "$LOWER_BOUND" -gt "$UPPER_BOUND" ]] ; then
   TMP="$UPPER_BOUND"
   UPPER_BOUND="$LOWER_BOUND"
   LOWER_BOUND="$TMP"
fi

#TMP_TREE="$(mktemp | perl -p -n -e 's/\/tmp\///').pl"

TREE_QUERY_BIN="tree-query-main.sh"


typeset -A CRIT_TO_STAT
typeset -A RELATION
#echo -n ""

CRIT_TO_STAT+=('node' 'Node_Count')
CRIT_TO_STAT+=('leaf' 'Leaf_Count')
CRIT_TO_STAT+=('radius' 'Radius')
CRIT_TO_STAT+=('diameter' 'Diameter')

#echo -n ""

RELATION+=('greater' '-gt')
RELATION+=('less' '-lt')
RELATION+=('equal' '-eq')

function print_record {
  TREE="$1"
  COUNT="$2"
  echo "<cdao:Tree rdf:about=\"$PHYLOWSTREE/$TREE\"><treestats:has_$CRIT_TO_STAT[$SIZE_CRITERIA]>$COUNT</treestats:has_$CRIT_TO_STAT[$SIZE_CRITERIA]></cdao:Tree>"

}



cat << EOM
<rdf:RDF xmlns="http://$SERVER_NAME$REQUEST_URI#"
     xml:base="http://$SERVER_NAME$REQUEST_URI"
     xmlns:owl2xml="http://www.w3.org/2006/12/owl2-xml#"
     xmlns:cdao="http://www.evolutionaryontology.org/cdao.owl#"
     xmlns:treestats="http://www.cs.nmsu.edu/~bchisham/cdao-store/tree-stats.owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:owl2="http://www.w3.org/2006/12/owl2#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:owl="http://www.w3.org/2002/07/owl#">
    
     <owl:Ontology rdf:about="">
         <owl:imports rdf:resource="http://www.cs.nmsu.edu/~bchisham/cdao-store/tree-stats.owl"/>
     </owl:Ontology>
     <!-- Showing trees with relation: $QUERY_RELATION Criterion: $SIZE_CRITERIA value: $SIZE_SPECIFIED -->
EOM

   GOAL="$SIZE_CRITERIA""_count( Tree, Node, Count )."
   FLET=$(echo $SIZE_CRITERIA | grep -oE "^[a-z]")
   CAP_CRIT="$(echo $FLET | tr "[:lower:]" "[:upper:]" )$(echo $SIZE_CRITERIA | sed "s/$FLET//" )"
   RESULTS=$($HOME/bin/prolog_exe_driver "$PWD/$TREE_QUERY_BIN" "$GOAL" | grep "=" | perl -p -n -e 's/,\n/,/g' | sed 's/Tree = //g' | sed 's/Count = //g')
   for i in  $(echo $RESULTS); do
       TREE="$(echo $i | cut -d, --fields=1 | perl -p -n -e "s/\'//g")"
       COUNT="$(echo $i | cut -d, --fields=2)"
       if [[ "$QUERY_RELATION" == "greater" ]]; then
           if [[ "$COUNT" -gt "$SIZE_SPECIFIED" ]]; then
	     print_record "$TREE" "$COUNT"
	   fi
       fi
       if [[ "$QUERY_RELATION" == "less" ]]; then
          if [[ "$COUNT" -lt "$SIZE_SPECIFIED" ]]; then
             print_record "$TREE" "$COUNT"
	  fi
       fi
       if [[ "$QUERY_RELATION" == "equal" ]]; then
          if [[ "$COUNT" -eq "$SIZE_SPECIFIED" ]]; then
	     print_record "$TREE" "$COUNT"
	  fi
       fi
       if [[ "$QUERY_RELATION" == "range" ]]; then
	   if [[ "$COUNT" -gt "$LOWER_BOUND" && "$COUNT" -lt "$UPPER_BOUND" ]]; then
	      print_record "$TREE" "$COUNT"
	   fi
       fi
    done
cat << EOM     
</rdf:RDF>
EOM
#rm "$TMP_TREE"
