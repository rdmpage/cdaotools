/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MatrixPanel.java
 *
 * Created on Apr 16, 2010, 9:48:26 PM
 */

package matrixviewer.view;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JPanel;
import matrixviewer.model.Matrix;

/**
 *
 * @author bchisham
 */
public class MatrixPanel extends JPanel {
    private ArrayList< JLabel > rows;
    private ArrayList< ArrayList< JLabel > > visible_cells;
    private Matrix model;
    private int label_width = 30;
    private int cell_height = 5;
    private int cell_width = 5;
    /** Creates new form MatrixPanel */
    public MatrixPanel() {
        initComponents();

        rows = new ArrayList();
        visible_cells = new ArrayList();
        model = null;
        label_width = 30;
        cell_height = 15;
        cell_width = 15;
    }

    public void setModel( Matrix model ){
        this.model = model;
        DrawableDatum color_chooser = new DrawableDatum( this.model.getUniqueValues() );
        this.setSize( this.model.getcolumncount() * this.cell_width + label_width , this.model.getrowcount() * cell_height);
        for (int i = 0; i < rows.size(); ++i){
            this.remove( rows.get(i) );

        }
        for (int row = 0; row < visible_cells.size(); ++row){
            for (int col = 0; col < visible_cells.get(row).size(); ++col){
                this.remove( visible_cells.get(row).get(col) );
            }
        }
        for (int row = 0; row < this.model.getrowcount()-1; ++row){
            this.rows.add( new JLabel() );
            this.rows.get(row).setText( this.model.getRowLabel(row) );
            this.rows.get(row).setBounds(0, row * cell_height, label_width, cell_height);
            this.add( this.rows.get(row) );
            this.visible_cells.add(new ArrayList());
            for (int col = 0; col < this.model.getcolumncount()-1; ++col){
                this.visible_cells.get(row).add( new JLabel() );
                this.visible_cells.get(row).get(col).setBackground( color_chooser.getColor( model.getDatum(row, col) ) );
                this.visible_cells.get(row).get(col).setBounds( label_width + row * cell_height, col * cell_width, cell_width, cell_height);
                this.add( this.visible_cells.get(row).get(col) );
            }
        }
        this.validate();
        this.repaint();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setName("Form"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 700, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 494, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
