/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MatrixDatamMetaDataView.java
 *
 * Created on Apr 17, 2010, 9:18:19 PM
 */

package matrixviewer.view;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.regex.Pattern;
import matrixviewer.model.MatrixDatum;
import org.jdesktop.application.Action;

/**
 *
 * @author bchisham
 */
public class MatrixDatumMetaDataView extends javax.swing.JDialog {
    private MatrixDatum datum;
    /** Creates new form MatrixDatamMetaDataView */
    public MatrixDatumMetaDataView() {
        initComponents();
        this.setTitle( "Meta Data Editor" );
        this.setAlwaysOnTop( true );
    }

    public void setMatrixDatum(MatrixDatum md){
        this.rowNameTextField.setText( md.getRowName() );
        this.colmunNameTextField.setText( md.getColumnName() );
        this.cellStateTextField.setText( md.getvalue() );
        this.rowNumberTextField.setText( ""+ md.getrow() );
        this.columnNumberTextField.setText(""+md.getcolumn());
        Iterator<String> it = md.getAnnotations().iterator();
        StringBuffer sb = new StringBuffer();
        while (it.hasNext()){
            sb.append( it.next()).append("\n");
        }
        this.additionalAnnotationsTextArea.setText( sb.toString() );
    }

    @Action
    private void syncAnnotations(){
        Pattern mat = Pattern.compile( "\n" );
        String[] lines = mat.split( this.additionalAnnotationsTextArea.getText() );
        ArrayList<String> anns = new ArrayList();
        for (int i =0; i < lines.length; ++i){
            anns.add( lines[i] );
        }
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        rowNameLabel = new javax.swing.JLabel();
        rowNameTextField = new javax.swing.JTextField();
        columnNameLabel = new javax.swing.JLabel();
        colmunNameTextField = new javax.swing.JTextField();
        rowNumberLabel = new javax.swing.JLabel();
        columnNumberLabel = new javax.swing.JLabel();
        rowNumberTextField = new javax.swing.JTextField();
        columnNumberTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        additionalAnnotationsTextArea = new javax.swing.JTextArea();
        additionalAnnationsLabel = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        cellStateLabel = new javax.swing.JLabel();
        cellStateTextField = new javax.swing.JTextField();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(matrixviewer.MatrixViewerApp.class).getContext().getResourceMap(MatrixDatumMetaDataView.class);
        titleLabel.setFont(resourceMap.getFont("titleLabel.font")); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText(resourceMap.getString("titleLabel.text")); // NOI18N
        titleLabel.setName("titleLabel"); // NOI18N

        rowNameLabel.setLabelFor(rowNameTextField);
        rowNameLabel.setText(resourceMap.getString("rowNameLabel.text")); // NOI18N
        rowNameLabel.setName("rowNameLabel"); // NOI18N

        rowNameTextField.setText(resourceMap.getString("rowNameTextField.text")); // NOI18N
        rowNameTextField.setName("rowNameTextField"); // NOI18N

        columnNameLabel.setLabelFor(colmunNameTextField);
        columnNameLabel.setText(resourceMap.getString("columnNameLabel.text")); // NOI18N
        columnNameLabel.setName("columnNameLabel"); // NOI18N

        colmunNameTextField.setText(resourceMap.getString("colmunNameTextField.text")); // NOI18N
        colmunNameTextField.setName("colmunNameTextField"); // NOI18N

        rowNumberLabel.setLabelFor(rowNameTextField);
        rowNumberLabel.setText(resourceMap.getString("rowNumberLabel.text")); // NOI18N
        rowNumberLabel.setName("rowNumberLabel"); // NOI18N

        columnNumberLabel.setLabelFor(columnNumberTextField);
        columnNumberLabel.setText(resourceMap.getString("columnNumberLabel.text")); // NOI18N
        columnNumberLabel.setName("columnNumberLabel"); // NOI18N

        rowNumberTextField.setText(resourceMap.getString("rowNumberTextField.text")); // NOI18N
        rowNumberTextField.setName("rowNumberTextField"); // NOI18N

        columnNumberTextField.setText(resourceMap.getString("columnNumberTextField.text")); // NOI18N
        columnNumberTextField.setName("columnNumberTextField"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        additionalAnnotationsTextArea.setColumns(20);
        additionalAnnotationsTextArea.setRows(5);
        additionalAnnotationsTextArea.setName("additionalAnnotationsTextArea"); // NOI18N
        additionalAnnotationsTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                additionalAnnotationsTextAreaFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(additionalAnnotationsTextArea);

        additionalAnnationsLabel.setLabelFor(additionalAnnotationsTextArea);
        additionalAnnationsLabel.setText(resourceMap.getString("additionalAnnationsLabel.text")); // NOI18N
        additionalAnnationsLabel.setName("additionalAnnationsLabel"); // NOI18N

        closeButton.setText(resourceMap.getString("closeButton.text")); // NOI18N
        closeButton.setName("closeButton"); // NOI18N
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        cellStateLabel.setLabelFor(cellStateTextField);
        cellStateLabel.setText(resourceMap.getString("cellStateLabel.text")); // NOI18N
        cellStateLabel.setName("cellStateLabel"); // NOI18N

        cellStateTextField.setText(resourceMap.getString("cellStateTextField.text")); // NOI18N
        cellStateTextField.setName("cellStateTextField"); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, titleLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(columnNameLabel)
                            .add(rowNameLabel))
                        .add(18, 18, 18)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(rowNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, cellStateTextField)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, colmunNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 149, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(columnNumberLabel)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(columnNumberTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                            .add(layout.createSequentialGroup()
                                .add(rowNumberLabel)
                                .add(37, 37, 37)
                                .add(rowNumberTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))))
                    .add(closeButton)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, additionalAnnationsLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .add(cellStateLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(titleLabel)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(rowNameLabel)
                    .add(rowNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(rowNumberLabel)
                    .add(rowNumberTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(columnNameLabel)
                    .add(colmunNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(columnNumberLabel)
                    .add(columnNumberTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 15, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cellStateLabel)
                    .add(cellStateTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(additionalAnnationsLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 239, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(closeButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.setVisible( false );
    }//GEN-LAST:event_closeButtonActionPerformed

    private void additionalAnnotationsTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_additionalAnnotationsTextAreaFocusLost
        this.syncAnnotations();
    }//GEN-LAST:event_additionalAnnotationsTextAreaFocusLost

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatrixDatumMetaDataView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel additionalAnnationsLabel;
    private javax.swing.JTextArea additionalAnnotationsTextArea;
    private javax.swing.JLabel cellStateLabel;
    private javax.swing.JTextField cellStateTextField;
    private javax.swing.JButton closeButton;
    private javax.swing.JTextField colmunNameTextField;
    private javax.swing.JLabel columnNameLabel;
    private javax.swing.JLabel columnNumberLabel;
    private javax.swing.JTextField columnNumberTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rowNameLabel;
    private javax.swing.JTextField rowNameTextField;
    private javax.swing.JLabel rowNumberLabel;
    private javax.swing.JTextField rowNumberTextField;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

}
