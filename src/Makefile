# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#Brandon Chisham
#Automake rules for the cdao translator.
#April 15, 2008



pkgdatadir = $(datadir)/CdaoTranslator
pkglibdir = $(libdir)/CdaoTranslator
pkgincludedir = $(includedir)/CdaoTranslator
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin9.8.0
host_triplet = i386-apple-darwin9.8.0
bin_PROGRAMS = cdao-import$(EXEEXT) cdao-mass-import$(EXEEXT) \
	cdao-tree-import$(EXEEXT) cdao-read-tree$(EXEEXT) \
	extract_trees.pl$(EXEEXT) cdao-phylip-import$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_cdao_import_OBJECTS = main.$(OBJEXT) shm_heap.$(OBJEXT) \
	util.$(OBJEXT) node.$(OBJEXT) data_representation.$(OBJEXT) \
	tree_description_scanner.$(OBJEXT) \
	tree_description_parser.$(OBJEXT) nexus_reader.$(OBJEXT) \
	phylip_reader.$(OBJEXT) codegen.$(OBJEXT) \
	nexus-codegen.$(OBJEXT) phylip-codegen.$(OBJEXT) \
	mega-codegen.$(OBJEXT)
cdao_import_OBJECTS = $(am_cdao_import_OBJECTS)
cdao_import_DEPENDENCIES = $(LIBDIR)/ncl-$(NCLV)/ncl/libncl.la \
	$(LIBDIR)/CppLoggerV2/src/libCppLogger.la
am_cdao_mass_import_OBJECTS = main2.$(OBJEXT) shm_heap.$(OBJEXT) \
	util.$(OBJEXT) node.$(OBJEXT) data_representation.$(OBJEXT) \
	tree_description_scanner.$(OBJEXT) \
	tree_description_parser.$(OBJEXT) nexus_reader.$(OBJEXT) \
	phylip_reader.$(OBJEXT) codegen.$(OBJEXT)
cdao_mass_import_OBJECTS = $(am_cdao_mass_import_OBJECTS)
cdao_mass_import_DEPENDENCIES = $(LIBDIR)/ncl-$(NCLV)/ncl/libncl.la \
	$(LIBDIR)/CppLoggerV2/src/libCppLogger.la
am_cdao_phylip_import_OBJECTS = main4.$(OBJEXT) util.$(OBJEXT) \
	node.$(OBJEXT) shm_heap.$(OBJEXT) \
	data_representation.$(OBJEXT) \
	tree_description_scanner.$(OBJEXT) \
	tree_description_parser.$(OBJEXT) nexus_reader.$(OBJEXT) \
	phylip_reader.$(OBJEXT) codegen.$(OBJEXT) \
	nexus-codegen.$(OBJEXT) phylip-codegen.$(OBJEXT) \
	mega-codegen.$(OBJEXT)
cdao_phylip_import_OBJECTS = $(am_cdao_phylip_import_OBJECTS)
cdao_phylip_import_DEPENDENCIES = $(LIBDIR)/ncl-$(NCLV)/ncl/libncl.la \
	$(LIBDIR)/CppLoggerV2/src/libCppLogger.la
am_cdao_read_tree_OBJECTS = read-tree.$(OBJEXT) shm_heap.$(OBJEXT) \
	util.$(OBJEXT) node.$(OBJEXT) data_representation.$(OBJEXT) \
	yywrap.$(OBJEXT) tree_description_scanner2.$(OBJEXT) \
	tree_description_parser2.$(OBJEXT) codegen.$(OBJEXT)
cdao_read_tree_OBJECTS = $(am_cdao_read_tree_OBJECTS)
cdao_read_tree_DEPENDENCIES = $(LIBDIR)/ncl-$(NCLV)/ncl/libncl.la \
	$(LIBDIR)/CppLoggerV2/src/libCppLogger.la
am_cdao_tree_import_OBJECTS = main3.$(OBJEXT) shm_heap.$(OBJEXT) \
	util.$(OBJEXT) node.$(OBJEXT) data_representation.$(OBJEXT) \
	tree_description_scanner.$(OBJEXT) \
	tree_description_parser.$(OBJEXT) codegen.$(OBJEXT)
cdao_tree_import_OBJECTS = $(am_cdao_tree_import_OBJECTS)
cdao_tree_import_DEPENDENCIES = $(LIBDIR)/ncl-$(NCLV)/ncl/libncl.la \
	$(LIBDIR)/CppLoggerV2/src/libCppLogger.la
extract_trees_pl_SOURCES = extract_trees.c
extract_trees_pl_OBJECTS = extract_trees.$(OBJEXT)
extract_trees_pl_LDADD = $(LDADD)
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
SCRIPTS = $(bin_SCRIPTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(cdao_import_SOURCES) $(cdao_mass_import_SOURCES) \
	$(cdao_phylip_import_SOURCES) $(cdao_read_tree_SOURCES) \
	$(cdao_tree_import_SOURCES) extract_trees.c
DIST_SOURCES = $(cdao_import_SOURCES) $(cdao_mass_import_SOURCES) \
	$(cdao_phylip_import_SOURCES) $(cdao_read_tree_SOURCES) \
	$(cdao_tree_import_SOURCES) extract_trees.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/bchisham/cdaotools/trunk/config/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/bchisham/cdaotools/trunk/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/bchisham/cdaotools/trunk/config/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/bchisham/cdaotools/trunk/config/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/bchisham/cdaotools/trunk/config/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = dsymutil
ECHO = /bin/echo
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = config/ltmain.sh
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/bchisham/cdaotools/trunk/config/missing --run makeinfo
MKDIR_P = ../config/install-sh -c -d
NMEDIT = nmedit
OBJEXT = o
PACKAGE = CdaoTranslator
PACKAGE_BUGREPORT = bchisham@cs.nmsu.edu
PACKAGE_NAME = CdaoTranslator
PACKAGE_STRING = CdaoTranslator 0.2
PACKAGE_TARNAME = cdaotranslator
PACKAGE_VERSION = 0.2
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /opt/local/bin/gsed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.2
YACC = bison -y
YFLAGS = 
abs_builddir = /Users/bchisham/cdaotools/trunk/src
abs_srcdir = /Users/bchisham/cdaotools/trunk/src
abs_top_builddir = /Users/bchisham/cdaotools/trunk
abs_top_srcdir = /Users/bchisham/cdaotools/trunk
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin9.8.0
build_alias = 
build_cpu = i386
build_os = darwin9.8.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin9.8.0
host_alias = 
host_cpu = i386
host_os = darwin9.8.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/bchisham/cdaotools/trunk/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/config/install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/bchisham
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  lib/ncl-2.1.06 lib/CppLoggerV2
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
INCLUDES = -I. -I$(top_builddir) -I$(top_builddir)/src/grammar/nexus -I$(top_builddir)/src/grammar/phylip -I$(top_builddir)/lib/ncl-2.1.06/ -I$(top_builddir)/lib/CppLoggerV2/src
AM_CXXFLAGS = -Wall -g
NEXDIR = grammar/nexus
PHYDIR = grammar/phylip
CODEGEN = codegen
LIBDIR = $(top_builddir)/lib
NCLV = 2.1.06
bin_SCRIPTS = extract_trees.pl
cdao_import_SOURCES = main.cpp \
		    shm_heap.cpp shm_heap.hpp \
		    util.cpp util.hpp \
		    node.cpp node.hpp \
		    data_representation.cpp data_representation.hpp \
		    $(NEXDIR)/tree_description_scanner.cpp $(NEXDIR)/tree_description_scanner.hpp \
		    $(NEXDIR)/tree_description_parser.cpp $(NEXDIR)/tree_description_parser.hpp \
		    $(NEXDIR)/nexus_reader.cpp $(NEXDIR)/nexus_reader.hpp \
		    $(PHYDIR)/phylip_reader.cpp $(PHYDIR)/phylip_reader.hpp \
		    $(CODEGEN)/constants.hpp \
		    $(CODEGEN)/codegen.cpp $(CODEGEN)/codegen.hpp \
		    $(CODEGEN)/nexus/nexus-codegen.cpp $(CODEGEN)/nexus/nexus-codegen.hpp \
		    $(CODEGEN)/phylip/phylip-codegen.cpp $(CODEGEN)/phylip/phylip-codegen.hpp \
		    $(CODEGEN)/mega/mega-codegen.cpp $(CODEGEN)/mega/mega-codegen.hpp 

cdao_import_LDADD = $(LIBDIR)/ncl-$(NCLV)/ncl/libncl.la $(LIBDIR)/CppLoggerV2/src/libCppLogger.la
cdao_mass_import_SOURCES = main2.cpp \
		    shm_heap.cpp shm_heap.hpp \
		    util.cpp util.hpp \
		    node.cpp node.hpp \
		    data_representation.cpp data_representation.hpp \
		    $(NEXDIR)/tree_description_scanner.cpp $(NEXDIR)/tree_description_scanner.hpp \
		    $(NEXDIR)/tree_description_parser.cpp $(NEXDIR)/tree_description_parser.hpp \
		    $(NEXDIR)/nexus_reader.cpp $(NEXDIR)/nexus_reader.hpp \
		    $(PHYDIR)/phylip_reader.cpp $(PHYDIR)/phylip_reader.hpp \
	 	    $(CODEGEN)/constants.hpp \
		    $(CODEGEN)/codegen.cpp $(CODEGEN)/codegen.hpp

cdao_mass_import_LDADD = $(LIBDIR)/ncl-$(NCLV)/ncl/libncl.la $(LIBDIR)/CppLoggerV2/src/libCppLogger.la
cdao_tree_import_SOURCES = main3.cpp \
		    shm_heap.cpp shm_heap.hpp \
		    util.cpp util.hpp \
		    node.cpp node.hpp \
		    data_representation.cpp data_representation.hpp \
		    $(NEXDIR)/tree_description_scanner.cpp $(NEXDIR)/tree_description_scanner.hpp \
		    $(NEXDIR)/tree_description_parser.cpp $(NEXDIR)/tree_description_parser.hpp \
	 	    $(CODEGEN)/constants.hpp \
		    $(CODEGEN)/codegen.cpp $(CODEGEN)/codegen.hpp

cdao_tree_import_LDADD = $(LIBDIR)/ncl-$(NCLV)/ncl/libncl.la $(LIBDIR)/CppLoggerV2/src/libCppLogger.la
cdao_read_tree_SOURCES = read-tree.cpp \
		    shm_heap.cpp shm_heap.hpp \
		    util.cpp util.hpp \
		    node.cpp node.hpp \
		    data_representation.cpp data_representation.hpp \
		    $(NEXDIR)/yywrap.c \
		    $(NEXDIR)/tree_description_scanner2.cpp  \
		    $(NEXDIR)/tree_description_parser2.cpp  \
	 	    $(CODEGEN)/constants.hpp \
		    $(CODEGEN)/codegen.cpp $(CODEGEN)/codegen.hpp

cdao_read_tree_LDADD = $(LIBDIR)/ncl-$(NCLV)/ncl/libncl.la $(LIBDIR)/CppLoggerV2/src/libCppLogger.la
cdao_phylip_import_SOURCES = main4.cpp \
		    util.cpp util.hpp \
		    node.cpp node.hpp \
		    shm_heap.cpp shm_heap.hpp \
		    data_representation.cpp data_representation.hpp \
		    $(NEXDIR)/tree_description_scanner.cpp $(NEXDIR)/tree_description_scanner.hpp \
		    $(NEXDIR)/tree_description_parser.cpp $(NEXDIR)/tree_description_parser.hpp \
		    $(NEXDIR)/nexus_reader.cpp $(NEXDIR)/nexus_reader.hpp \
		    $(PHYDIR)/phylip_reader.cpp $(PHYDIR)/phylip_reader.hpp \
	 	    $(CODEGEN)/constants.hpp \
		    $(CODEGEN)/codegen.cpp $(CODEGEN)/codegen.hpp \
		    $(CODEGEN)/nexus/nexus-codegen.cpp $(CODEGEN)/nexus/nexus-codegen.hpp \
		    $(CODEGEN)/phylip/phylip-codegen.cpp $(CODEGEN)/phylip/phylip-codegen.hpp \
		    $(CODEGEN)/mega/mega-codegen.cpp $(CODEGEN)/mega/mega-codegen.hpp 

cdao_phylip_import_LDADD = $(LIBDIR)/ncl-$(NCLV)/ncl/libncl.la $(LIBDIR)/CppLoggerV2/src/libCppLogger.la
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
cdao-import$(EXEEXT): $(cdao_import_OBJECTS) $(cdao_import_DEPENDENCIES) 
	@rm -f cdao-import$(EXEEXT)
	$(CXXLINK) $(cdao_import_OBJECTS) $(cdao_import_LDADD) $(LIBS)
cdao-mass-import$(EXEEXT): $(cdao_mass_import_OBJECTS) $(cdao_mass_import_DEPENDENCIES) 
	@rm -f cdao-mass-import$(EXEEXT)
	$(CXXLINK) $(cdao_mass_import_OBJECTS) $(cdao_mass_import_LDADD) $(LIBS)
cdao-phylip-import$(EXEEXT): $(cdao_phylip_import_OBJECTS) $(cdao_phylip_import_DEPENDENCIES) 
	@rm -f cdao-phylip-import$(EXEEXT)
	$(CXXLINK) $(cdao_phylip_import_OBJECTS) $(cdao_phylip_import_LDADD) $(LIBS)
cdao-read-tree$(EXEEXT): $(cdao_read_tree_OBJECTS) $(cdao_read_tree_DEPENDENCIES) 
	@rm -f cdao-read-tree$(EXEEXT)
	$(CXXLINK) $(cdao_read_tree_OBJECTS) $(cdao_read_tree_LDADD) $(LIBS)
cdao-tree-import$(EXEEXT): $(cdao_tree_import_OBJECTS) $(cdao_tree_import_DEPENDENCIES) 
	@rm -f cdao-tree-import$(EXEEXT)
	$(CXXLINK) $(cdao_tree_import_OBJECTS) $(cdao_tree_import_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) '$$d$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	    $(binSCRIPT_INSTALL) "$$d$$p" "$(DESTDIR)$(bindir)/$$f"; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/codegen.Po
include ./$(DEPDIR)/data_representation.Po
include ./$(DEPDIR)/extract_trees.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/main2.Po
include ./$(DEPDIR)/main3.Po
include ./$(DEPDIR)/main4.Po
include ./$(DEPDIR)/mega-codegen.Po
include ./$(DEPDIR)/nexus-codegen.Po
include ./$(DEPDIR)/nexus_reader.Po
include ./$(DEPDIR)/node.Po
include ./$(DEPDIR)/phylip-codegen.Po
include ./$(DEPDIR)/phylip_reader.Po
include ./$(DEPDIR)/read-tree.Po
include ./$(DEPDIR)/shm_heap.Po
include ./$(DEPDIR)/tree_description_parser.Po
include ./$(DEPDIR)/tree_description_parser2.Po
include ./$(DEPDIR)/tree_description_scanner.Po
include ./$(DEPDIR)/tree_description_scanner2.Po
include ./$(DEPDIR)/util.Po
include ./$(DEPDIR)/yywrap.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

yywrap.o: $(NEXDIR)/yywrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT yywrap.o -MD -MP -MF $(DEPDIR)/yywrap.Tpo -c -o yywrap.o `test -f '$(NEXDIR)/yywrap.c' || echo '$(srcdir)/'`$(NEXDIR)/yywrap.c
	mv -f $(DEPDIR)/yywrap.Tpo $(DEPDIR)/yywrap.Po
#	source='$(NEXDIR)/yywrap.c' object='yywrap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o yywrap.o `test -f '$(NEXDIR)/yywrap.c' || echo '$(srcdir)/'`$(NEXDIR)/yywrap.c

yywrap.obj: $(NEXDIR)/yywrap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT yywrap.obj -MD -MP -MF $(DEPDIR)/yywrap.Tpo -c -o yywrap.obj `if test -f '$(NEXDIR)/yywrap.c'; then $(CYGPATH_W) '$(NEXDIR)/yywrap.c'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/yywrap.c'; fi`
	mv -f $(DEPDIR)/yywrap.Tpo $(DEPDIR)/yywrap.Po
#	source='$(NEXDIR)/yywrap.c' object='yywrap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o yywrap.obj `if test -f '$(NEXDIR)/yywrap.c'; then $(CYGPATH_W) '$(NEXDIR)/yywrap.c'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/yywrap.c'; fi`

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

tree_description_scanner.o: $(NEXDIR)/tree_description_scanner.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tree_description_scanner.o -MD -MP -MF $(DEPDIR)/tree_description_scanner.Tpo -c -o tree_description_scanner.o `test -f '$(NEXDIR)/tree_description_scanner.cpp' || echo '$(srcdir)/'`$(NEXDIR)/tree_description_scanner.cpp
	mv -f $(DEPDIR)/tree_description_scanner.Tpo $(DEPDIR)/tree_description_scanner.Po
#	source='$(NEXDIR)/tree_description_scanner.cpp' object='tree_description_scanner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tree_description_scanner.o `test -f '$(NEXDIR)/tree_description_scanner.cpp' || echo '$(srcdir)/'`$(NEXDIR)/tree_description_scanner.cpp

tree_description_scanner.obj: $(NEXDIR)/tree_description_scanner.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tree_description_scanner.obj -MD -MP -MF $(DEPDIR)/tree_description_scanner.Tpo -c -o tree_description_scanner.obj `if test -f '$(NEXDIR)/tree_description_scanner.cpp'; then $(CYGPATH_W) '$(NEXDIR)/tree_description_scanner.cpp'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/tree_description_scanner.cpp'; fi`
	mv -f $(DEPDIR)/tree_description_scanner.Tpo $(DEPDIR)/tree_description_scanner.Po
#	source='$(NEXDIR)/tree_description_scanner.cpp' object='tree_description_scanner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tree_description_scanner.obj `if test -f '$(NEXDIR)/tree_description_scanner.cpp'; then $(CYGPATH_W) '$(NEXDIR)/tree_description_scanner.cpp'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/tree_description_scanner.cpp'; fi`

tree_description_parser.o: $(NEXDIR)/tree_description_parser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tree_description_parser.o -MD -MP -MF $(DEPDIR)/tree_description_parser.Tpo -c -o tree_description_parser.o `test -f '$(NEXDIR)/tree_description_parser.cpp' || echo '$(srcdir)/'`$(NEXDIR)/tree_description_parser.cpp
	mv -f $(DEPDIR)/tree_description_parser.Tpo $(DEPDIR)/tree_description_parser.Po
#	source='$(NEXDIR)/tree_description_parser.cpp' object='tree_description_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tree_description_parser.o `test -f '$(NEXDIR)/tree_description_parser.cpp' || echo '$(srcdir)/'`$(NEXDIR)/tree_description_parser.cpp

tree_description_parser.obj: $(NEXDIR)/tree_description_parser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tree_description_parser.obj -MD -MP -MF $(DEPDIR)/tree_description_parser.Tpo -c -o tree_description_parser.obj `if test -f '$(NEXDIR)/tree_description_parser.cpp'; then $(CYGPATH_W) '$(NEXDIR)/tree_description_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/tree_description_parser.cpp'; fi`
	mv -f $(DEPDIR)/tree_description_parser.Tpo $(DEPDIR)/tree_description_parser.Po
#	source='$(NEXDIR)/tree_description_parser.cpp' object='tree_description_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tree_description_parser.obj `if test -f '$(NEXDIR)/tree_description_parser.cpp'; then $(CYGPATH_W) '$(NEXDIR)/tree_description_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/tree_description_parser.cpp'; fi`

nexus_reader.o: $(NEXDIR)/nexus_reader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nexus_reader.o -MD -MP -MF $(DEPDIR)/nexus_reader.Tpo -c -o nexus_reader.o `test -f '$(NEXDIR)/nexus_reader.cpp' || echo '$(srcdir)/'`$(NEXDIR)/nexus_reader.cpp
	mv -f $(DEPDIR)/nexus_reader.Tpo $(DEPDIR)/nexus_reader.Po
#	source='$(NEXDIR)/nexus_reader.cpp' object='nexus_reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nexus_reader.o `test -f '$(NEXDIR)/nexus_reader.cpp' || echo '$(srcdir)/'`$(NEXDIR)/nexus_reader.cpp

nexus_reader.obj: $(NEXDIR)/nexus_reader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nexus_reader.obj -MD -MP -MF $(DEPDIR)/nexus_reader.Tpo -c -o nexus_reader.obj `if test -f '$(NEXDIR)/nexus_reader.cpp'; then $(CYGPATH_W) '$(NEXDIR)/nexus_reader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/nexus_reader.cpp'; fi`
	mv -f $(DEPDIR)/nexus_reader.Tpo $(DEPDIR)/nexus_reader.Po
#	source='$(NEXDIR)/nexus_reader.cpp' object='nexus_reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nexus_reader.obj `if test -f '$(NEXDIR)/nexus_reader.cpp'; then $(CYGPATH_W) '$(NEXDIR)/nexus_reader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/nexus_reader.cpp'; fi`

phylip_reader.o: $(PHYDIR)/phylip_reader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phylip_reader.o -MD -MP -MF $(DEPDIR)/phylip_reader.Tpo -c -o phylip_reader.o `test -f '$(PHYDIR)/phylip_reader.cpp' || echo '$(srcdir)/'`$(PHYDIR)/phylip_reader.cpp
	mv -f $(DEPDIR)/phylip_reader.Tpo $(DEPDIR)/phylip_reader.Po
#	source='$(PHYDIR)/phylip_reader.cpp' object='phylip_reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phylip_reader.o `test -f '$(PHYDIR)/phylip_reader.cpp' || echo '$(srcdir)/'`$(PHYDIR)/phylip_reader.cpp

phylip_reader.obj: $(PHYDIR)/phylip_reader.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phylip_reader.obj -MD -MP -MF $(DEPDIR)/phylip_reader.Tpo -c -o phylip_reader.obj `if test -f '$(PHYDIR)/phylip_reader.cpp'; then $(CYGPATH_W) '$(PHYDIR)/phylip_reader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(PHYDIR)/phylip_reader.cpp'; fi`
	mv -f $(DEPDIR)/phylip_reader.Tpo $(DEPDIR)/phylip_reader.Po
#	source='$(PHYDIR)/phylip_reader.cpp' object='phylip_reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phylip_reader.obj `if test -f '$(PHYDIR)/phylip_reader.cpp'; then $(CYGPATH_W) '$(PHYDIR)/phylip_reader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(PHYDIR)/phylip_reader.cpp'; fi`

codegen.o: $(CODEGEN)/codegen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT codegen.o -MD -MP -MF $(DEPDIR)/codegen.Tpo -c -o codegen.o `test -f '$(CODEGEN)/codegen.cpp' || echo '$(srcdir)/'`$(CODEGEN)/codegen.cpp
	mv -f $(DEPDIR)/codegen.Tpo $(DEPDIR)/codegen.Po
#	source='$(CODEGEN)/codegen.cpp' object='codegen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o codegen.o `test -f '$(CODEGEN)/codegen.cpp' || echo '$(srcdir)/'`$(CODEGEN)/codegen.cpp

codegen.obj: $(CODEGEN)/codegen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT codegen.obj -MD -MP -MF $(DEPDIR)/codegen.Tpo -c -o codegen.obj `if test -f '$(CODEGEN)/codegen.cpp'; then $(CYGPATH_W) '$(CODEGEN)/codegen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CODEGEN)/codegen.cpp'; fi`
	mv -f $(DEPDIR)/codegen.Tpo $(DEPDIR)/codegen.Po
#	source='$(CODEGEN)/codegen.cpp' object='codegen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o codegen.obj `if test -f '$(CODEGEN)/codegen.cpp'; then $(CYGPATH_W) '$(CODEGEN)/codegen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CODEGEN)/codegen.cpp'; fi`

nexus-codegen.o: $(CODEGEN)/nexus/nexus-codegen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nexus-codegen.o -MD -MP -MF $(DEPDIR)/nexus-codegen.Tpo -c -o nexus-codegen.o `test -f '$(CODEGEN)/nexus/nexus-codegen.cpp' || echo '$(srcdir)/'`$(CODEGEN)/nexus/nexus-codegen.cpp
	mv -f $(DEPDIR)/nexus-codegen.Tpo $(DEPDIR)/nexus-codegen.Po
#	source='$(CODEGEN)/nexus/nexus-codegen.cpp' object='nexus-codegen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nexus-codegen.o `test -f '$(CODEGEN)/nexus/nexus-codegen.cpp' || echo '$(srcdir)/'`$(CODEGEN)/nexus/nexus-codegen.cpp

nexus-codegen.obj: $(CODEGEN)/nexus/nexus-codegen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nexus-codegen.obj -MD -MP -MF $(DEPDIR)/nexus-codegen.Tpo -c -o nexus-codegen.obj `if test -f '$(CODEGEN)/nexus/nexus-codegen.cpp'; then $(CYGPATH_W) '$(CODEGEN)/nexus/nexus-codegen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CODEGEN)/nexus/nexus-codegen.cpp'; fi`
	mv -f $(DEPDIR)/nexus-codegen.Tpo $(DEPDIR)/nexus-codegen.Po
#	source='$(CODEGEN)/nexus/nexus-codegen.cpp' object='nexus-codegen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nexus-codegen.obj `if test -f '$(CODEGEN)/nexus/nexus-codegen.cpp'; then $(CYGPATH_W) '$(CODEGEN)/nexus/nexus-codegen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CODEGEN)/nexus/nexus-codegen.cpp'; fi`

phylip-codegen.o: $(CODEGEN)/phylip/phylip-codegen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phylip-codegen.o -MD -MP -MF $(DEPDIR)/phylip-codegen.Tpo -c -o phylip-codegen.o `test -f '$(CODEGEN)/phylip/phylip-codegen.cpp' || echo '$(srcdir)/'`$(CODEGEN)/phylip/phylip-codegen.cpp
	mv -f $(DEPDIR)/phylip-codegen.Tpo $(DEPDIR)/phylip-codegen.Po
#	source='$(CODEGEN)/phylip/phylip-codegen.cpp' object='phylip-codegen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phylip-codegen.o `test -f '$(CODEGEN)/phylip/phylip-codegen.cpp' || echo '$(srcdir)/'`$(CODEGEN)/phylip/phylip-codegen.cpp

phylip-codegen.obj: $(CODEGEN)/phylip/phylip-codegen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT phylip-codegen.obj -MD -MP -MF $(DEPDIR)/phylip-codegen.Tpo -c -o phylip-codegen.obj `if test -f '$(CODEGEN)/phylip/phylip-codegen.cpp'; then $(CYGPATH_W) '$(CODEGEN)/phylip/phylip-codegen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CODEGEN)/phylip/phylip-codegen.cpp'; fi`
	mv -f $(DEPDIR)/phylip-codegen.Tpo $(DEPDIR)/phylip-codegen.Po
#	source='$(CODEGEN)/phylip/phylip-codegen.cpp' object='phylip-codegen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o phylip-codegen.obj `if test -f '$(CODEGEN)/phylip/phylip-codegen.cpp'; then $(CYGPATH_W) '$(CODEGEN)/phylip/phylip-codegen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CODEGEN)/phylip/phylip-codegen.cpp'; fi`

mega-codegen.o: $(CODEGEN)/mega/mega-codegen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mega-codegen.o -MD -MP -MF $(DEPDIR)/mega-codegen.Tpo -c -o mega-codegen.o `test -f '$(CODEGEN)/mega/mega-codegen.cpp' || echo '$(srcdir)/'`$(CODEGEN)/mega/mega-codegen.cpp
	mv -f $(DEPDIR)/mega-codegen.Tpo $(DEPDIR)/mega-codegen.Po
#	source='$(CODEGEN)/mega/mega-codegen.cpp' object='mega-codegen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mega-codegen.o `test -f '$(CODEGEN)/mega/mega-codegen.cpp' || echo '$(srcdir)/'`$(CODEGEN)/mega/mega-codegen.cpp

mega-codegen.obj: $(CODEGEN)/mega/mega-codegen.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mega-codegen.obj -MD -MP -MF $(DEPDIR)/mega-codegen.Tpo -c -o mega-codegen.obj `if test -f '$(CODEGEN)/mega/mega-codegen.cpp'; then $(CYGPATH_W) '$(CODEGEN)/mega/mega-codegen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CODEGEN)/mega/mega-codegen.cpp'; fi`
	mv -f $(DEPDIR)/mega-codegen.Tpo $(DEPDIR)/mega-codegen.Po
#	source='$(CODEGEN)/mega/mega-codegen.cpp' object='mega-codegen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mega-codegen.obj `if test -f '$(CODEGEN)/mega/mega-codegen.cpp'; then $(CYGPATH_W) '$(CODEGEN)/mega/mega-codegen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(CODEGEN)/mega/mega-codegen.cpp'; fi`

tree_description_scanner2.o: $(NEXDIR)/tree_description_scanner2.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tree_description_scanner2.o -MD -MP -MF $(DEPDIR)/tree_description_scanner2.Tpo -c -o tree_description_scanner2.o `test -f '$(NEXDIR)/tree_description_scanner2.cpp' || echo '$(srcdir)/'`$(NEXDIR)/tree_description_scanner2.cpp
	mv -f $(DEPDIR)/tree_description_scanner2.Tpo $(DEPDIR)/tree_description_scanner2.Po
#	source='$(NEXDIR)/tree_description_scanner2.cpp' object='tree_description_scanner2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tree_description_scanner2.o `test -f '$(NEXDIR)/tree_description_scanner2.cpp' || echo '$(srcdir)/'`$(NEXDIR)/tree_description_scanner2.cpp

tree_description_scanner2.obj: $(NEXDIR)/tree_description_scanner2.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tree_description_scanner2.obj -MD -MP -MF $(DEPDIR)/tree_description_scanner2.Tpo -c -o tree_description_scanner2.obj `if test -f '$(NEXDIR)/tree_description_scanner2.cpp'; then $(CYGPATH_W) '$(NEXDIR)/tree_description_scanner2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/tree_description_scanner2.cpp'; fi`
	mv -f $(DEPDIR)/tree_description_scanner2.Tpo $(DEPDIR)/tree_description_scanner2.Po
#	source='$(NEXDIR)/tree_description_scanner2.cpp' object='tree_description_scanner2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tree_description_scanner2.obj `if test -f '$(NEXDIR)/tree_description_scanner2.cpp'; then $(CYGPATH_W) '$(NEXDIR)/tree_description_scanner2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/tree_description_scanner2.cpp'; fi`

tree_description_parser2.o: $(NEXDIR)/tree_description_parser2.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tree_description_parser2.o -MD -MP -MF $(DEPDIR)/tree_description_parser2.Tpo -c -o tree_description_parser2.o `test -f '$(NEXDIR)/tree_description_parser2.cpp' || echo '$(srcdir)/'`$(NEXDIR)/tree_description_parser2.cpp
	mv -f $(DEPDIR)/tree_description_parser2.Tpo $(DEPDIR)/tree_description_parser2.Po
#	source='$(NEXDIR)/tree_description_parser2.cpp' object='tree_description_parser2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tree_description_parser2.o `test -f '$(NEXDIR)/tree_description_parser2.cpp' || echo '$(srcdir)/'`$(NEXDIR)/tree_description_parser2.cpp

tree_description_parser2.obj: $(NEXDIR)/tree_description_parser2.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tree_description_parser2.obj -MD -MP -MF $(DEPDIR)/tree_description_parser2.Tpo -c -o tree_description_parser2.obj `if test -f '$(NEXDIR)/tree_description_parser2.cpp'; then $(CYGPATH_W) '$(NEXDIR)/tree_description_parser2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/tree_description_parser2.cpp'; fi`
	mv -f $(DEPDIR)/tree_description_parser2.Tpo $(DEPDIR)/tree_description_parser2.Po
#	source='$(NEXDIR)/tree_description_parser2.cpp' object='tree_description_parser2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tree_description_parser2.obj `if test -f '$(NEXDIR)/tree_description_parser2.cpp'; then $(CYGPATH_W) '$(NEXDIR)/tree_description_parser2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(NEXDIR)/tree_description_parser2.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS


$(NEXDIR)/tree_description_parser2.cpp: $(NEXDIR)/tree_description_parser2.yy
	(cd $(NEXDIR); bison -d -o tree_description_parser2.cpp tree_description_parser2.yy; echo -e "#include <string>\n#include <node.hpp>\n#include <util.hpp>" > tree_description_parser2.hpp.tmp; cat tree_description_parser2.hpp >> tree_description_parser2.hpp.tmp; mv tree_description_parser.2.hpp.tmp tree_description_parser2.hpp)
$(NEXDIR)/tree_description_scanner2.cpp: $(NEXDIR)/tree_description_scanner2.l $(NEXDIR)/tree_description_parser2.cpp
	flex -o $(NEXDIR)/tree_description_scanner2.cpp $(NEXDIR)/tree_description_scanner2.l

extract_trees.pl: $(NEXDIR)/extract_trees.pl
	cp $(NEXDIR)/extract_trees.pl .
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
